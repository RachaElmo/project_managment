{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ali/project_managment/Frontend/src/components/Task.js\";\nimport React from 'react';\nimport apiClient from '../services/api';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nexport default class Task extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: []\n    };\n  }\n\n  fetchTasks() {\n    if (sessionStorage.getItem('loggedIn')) {\n      apiClient.get('sanctum/csrf-cookie').then(() => apiClient.post('/api/tasks', {\n        milestoneID: this.props.id\n      }).then(response => {\n        const tasks = response.data;\n        this.setState({\n          tasks: tasks\n        });\n      }).catch(error => console.error(error)));\n    }\n  }\n\n  componentDidMount() {\n    this.fetchTasks();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      children: this.state.tasks.map(tasks => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [tasks.taskName, tasks.milestones.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 45\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 1\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/ali/project_managment/Frontend/src/components/Task.js"],"names":["React","apiClient","BrowserRouter","Router","Route","Link","Task","Component","constructor","props","state","tasks","fetchTasks","sessionStorage","getItem","get","then","post","milestoneID","id","response","data","setState","catch","error","console","componentDidMount","render","display","flexDirection","map","taskName","milestones","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,QAAqD,kBAArD;AAGA,eAAe,MAAMC,IAAN,SAAmBN,KAAK,CAACO,SAAzB,CAAmC;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAC;AADG,KAAb;AAGH;;AAIOC,EAAAA,UAAU,GAAG;AACT,QAAIC,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAJ,EAAwC;AACpCb,MAAAA,SAAS,CAACc,GAAV,CAAc,qBAAd,EAAqCC,IAArC,CAA0C,MAAMf,SAAS,CAACgB,IAAV,CAAe,YAAf,EAA4B;AAACC,QAAAA,WAAW,EAAC,KAAKT,KAAL,CAAWU;AAAxB,OAA5B,EAC3CH,IAD2C,CACtCI,QAAQ,IAAI;AACd,cAAMT,KAAK,GAAGS,QAAQ,CAACC,IAAvB;AACA,aAAKC,QAAL,CAAc;AAAEX,UAAAA,KAAK,EAAEA;AAAT,SAAd;AAEH,OAL2C,EAM3CY,KAN2C,CAMrCC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAN4B,CAAhD;AASH;AACJ;;AAEDE,EAAAA,iBAAiB,GAAE;AAClB,SAAKd,UAAL;AACA;;AAGTe,EAAAA,MAAM,GAAE;AAEJ,wBACR;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAC,MAAT;AAAiBC,QAAAA,aAAa,EAAC;AAA/B,OAAZ;AAAA,gBACC,KAAKnB,KAAL,CAAWC,KAAX,CAAiBmB,GAAjB,CAAsBnB,KAAD,IAAW;AACO,4BACI;AAAA,iCACA;AAAA,uBAAMA,KAAK,CAACoB,QAAZ,EACKpB,KAAK,CAACqB,UAAN,CAAiBC,IADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,yBADJ;AAMQ,OAP/C;AADD;AAAA;AAAA;AAAA;AAAA,YADQ;AAiBH;;AAhD6C","sourcesContent":["import React from 'react';\nimport apiClient from '../services/api';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\n\nexport default class Task extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tasks:[],\n        };\n    }\n\n    \n\n            fetchTasks() {\n                if (sessionStorage.getItem('loggedIn')) {\n                    apiClient.get('sanctum/csrf-cookie').then(() => apiClient.post('/api/tasks',{milestoneID:this.props.id})\n                        .then(response => {\n                            const tasks = response.data;\n                            this.setState({ tasks: tasks });\n                            \n                        })\n                        .catch(error => console.error(error)\n                        ))\n        \n                }\n            }\n\n            componentDidMount(){\n             this.fetchTasks();  \n            }\n\n\n    render(){\n      \n        return(\n<div style={{display:\"flex\", flexDirection:\"column\"}}>\n{this.state.tasks.map((tasks) => {\n                                        return (\n                                            <>\n                                            <div>{tasks.taskName}\n                                                {tasks.milestones.name}\n                                             </div>\n                                           </>\n                                              )})}\n\n\n</div>\n\n\n\n        )\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}