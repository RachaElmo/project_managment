{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ali/project_managment/Frontend/src/components/Projects.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport apiClient from '../services/api';\n\nconst Projects = props => {\n  _s();\n\n  const [projects, setProjects] = React.useState([]);\n  React.useEffect(() => {\n    if (props.loggedIn) {\n      apiClient.get('sanctum/csrf-cookie').then(() => apiClient.get('/api/projects').then(response => {\n        setCategories(response.data);\n      }).catch(error => console.error(error)));\n    }\n  }, []);\n  const categoryList = categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: category.id,\n    children: category.name\n  }, category.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this));\n\n  if (props.loggedIn) {\n    return /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"custom-select\",\n      onChange: e => {\n        props.onChangeCatId(e.target.value);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: 0,\n        children: \"Choose a Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), categoryList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alert alert-warning\",\n    children: \"You are not logged in.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Projects, \"TSrpuQX6QU8EgjQSxaAzj2u9i4o=\");\n\n_c = Projects;\nexport default Categories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["/home/ali/project_managment/Frontend/src/components/Projects.js"],"names":["React","apiClient","Projects","props","projects","setProjects","useState","useEffect","loggedIn","get","then","response","setCategories","data","catch","error","console","categoryList","categories","map","category","id","name","e","onChangeCatId","target","value","Categories"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,KAAK,CAACM,QAAN,CAAe,EAAf,CAAhC;AACAN,EAAAA,KAAK,CAACO,SAAN,CAAgB,MAAM;AAClB,QAAIJ,KAAK,CAACK,QAAV,EAAoB;AAChBP,MAAAA,SAAS,CAACQ,GAAV,CAAc,qBAAd,EAAqCC,IAArC,CAA0C,MAAMT,SAAS,CAACQ,GAAV,CAAc,eAAd,EAC3CC,IAD2C,CACtCC,QAAQ,IAAI;AACdC,QAAAA,aAAa,CAACD,QAAQ,CAACE,IAAV,CAAb;AACH,OAH2C,EAI3CC,KAJ2C,CAIrCC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAJ4B,CAAhD;AAMH;AACJ,GATD,EASG,EATH;AAUA,QAAME,YAAY,GAAGC,UAAU,CAACC,GAAX,CAAgBC,QAAD,iBAChC;AAAQ,IAAA,KAAK,EAAEA,QAAQ,CAACC,EAAxB;AAAA,cAAgDD,QAAQ,CAACE;AAAzD,KAAiCF,QAAQ,CAACC,EAA1C;AAAA;AAAA;AAAA;AAAA,UADiB,CAArB;;AAIA,MAAIlB,KAAK,CAACK,QAAV,EAAoB;AAChB,wBAEI;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAkC,MAAA,QAAQ,EAAGe,CAAD,IAAO;AAAEpB,QAAAA,KAAK,CAACqB,aAAN,CAAoBD,CAAC,CAACE,MAAF,CAASC,KAA7B;AAAqC,OAA1F;AAAA,8BACI;AAAQ,QAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EACiDT,YADjD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAMH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CA3BD;;GAAMf,Q;;KAAAA,Q;AA6BN,eAAeyB,UAAf","sourcesContent":["import React from 'react';\nimport apiClient from '../services/api';\n\nconst Projects = (props) => {\n    const [projects, setProjects] = React.useState([]);\n    React.useEffect(() => {\n        if (props.loggedIn) {\n            apiClient.get('sanctum/csrf-cookie').then(() => apiClient.get('/api/projects')\n                .then(response => {\n                    setCategories(response.data)\n                })\n                .catch(error => console.error(error)))\n\n        }\n    }, []);\n    const categoryList = categories.map((category) =>\n        <option value={category.id} key={category.id} >{category.name}</option>\n\n    );\n    if (props.loggedIn) {\n        return (\n\n            <select className=\"custom-select\" onChange={(e) => { props.onChangeCatId(e.target.value) }} >\n                <option value={0}>Choose a Category</option>{categoryList}\n            </select>\n        );\n    }\n    return (\n        <div className=\"alert alert-warning\">You are not logged in.</div>\n    );\n};\n\nexport default Categories;"]},"metadata":{},"sourceType":"module"}