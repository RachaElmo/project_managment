{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/prjct_managment/Frontend/src/components/Project.js\";\nimport React from 'react';\nimport apiClient from '../services/api';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport Task from './Task';\nexport default class Project extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      milestones: [],\n      tasks: []\n    };\n  } // fetchMilestones() {\n  //             if (sessionStorage.getItem('loggedIn')) {\n  //                 apiClient.get('sanctum/csrf-cookie').then(() => apiClient.post('/api/milestones',{projectID:this.props.id})\n  //                     .then(response => {\n  //                         const milestones = response.data;\n  //                         this.setState({ milestones: milestones });\n  //                     })\n  //                     .catch(error => console.error(error)\n  //                     ))\n  //             }\n  //         }\n  // fetchTasks() {\n  //     if (sessionStorage.getItem('loggedIn')) {\n  //         apiClient.get('sanctum/csrf-cookie').then(() => apiClient.post('/api/tasks',{milestoneID:this.props.id})\n  //             .then(response => {\n  //                 const tasks = response.data;\n  //                 this.setState({ tasks: tasks });\n  //             })\n  //             .catch(error => console.error(error)\n  //             ))\n  //     }\n  // }\n\n\n  componentDidMount() {\n    console.log(this.props.id); //  this.fetchMilestones();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped tableLeft\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"thead-dark\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: \"2\",\n              children: \"Project Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          className: \"\",\n          children: this.props.milestone.map(milestones => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: milestones.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Task, {\n                  id: milestones.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 54\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 49\n              }, this)]\n            }, milestones.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 45\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 1\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["/var/www/prjct_managment/Frontend/src/components/Project.js"],"names":["React","apiClient","BrowserRouter","Router","Route","Link","Task","Project","Component","constructor","props","state","milestones","tasks","componentDidMount","console","log","id","render","milestone","map","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,QAAqD,kBAArD;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,eAAe,MAAMC,OAAN,SAAsBP,KAAK,CAACQ,SAA5B,CAAsC;AACjDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAC,EADF;AAETC,MAAAA,KAAK,EAAC;AAFG,KAAb;AAIH,GAPgD,CASjD;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEQ;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;AAEAC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWO,EAAvB,EADe,CAEjB;AAED;;AAITC,EAAAA,MAAM,GAAE;AAEJ,wBACR;AAAA,6BAGA;AAAO,QAAA,SAAS,EAAC,+BAAjB;AAAA,gCACgC;AAAO,UAAA,SAAS,EAAC,YAAjB;AAAA,iCACI;AAAA,mCAEI;AAAI,cAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADhC,eAQgC;AAAO,UAAA,SAAS,EAAC,EAAjB;AAAA,oBACK,KAAKR,KAAL,CAAWS,SAAX,CAAqBC,GAArB,CAA0BR,UAAD,IAAgB;AACtC,gCACI;AAAA,sCACI;AAAA,0BAAKA,UAAU,CAACS;AAAhB;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA,uCAAK,QAAC,IAAD;AAAM,kBAAA,EAAE,EAAET,UAAU,CAACK;AAArB;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA,eAASL,UAAU,CAACK,EAApB;AAAA;AAAA;AAAA;AAAA,oBADJ;AAMQ,WAPX;AADL;AAAA;AAAA;AAAA;AAAA,gBARhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA,qBADQ;AA4BH;;AA3EgD","sourcesContent":["import React from 'react';\nimport apiClient from '../services/api';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport Task from './Task';\n\nexport default class Project extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            milestones:[],\n            tasks:[],\n        };\n    }\n\n    // fetchMilestones() {\n    //             if (sessionStorage.getItem('loggedIn')) {\n    //                 apiClient.get('sanctum/csrf-cookie').then(() => apiClient.post('/api/milestones',{projectID:this.props.id})\n    //                     .then(response => {\n    //                         const milestones = response.data;\n    //                         this.setState({ milestones: milestones });\n                            \n    //                     })\n    //                     .catch(error => console.error(error)\n    //                     ))\n        \n    //             }\n    //         }\n\n            // fetchTasks() {\n            //     if (sessionStorage.getItem('loggedIn')) {\n            //         apiClient.get('sanctum/csrf-cookie').then(() => apiClient.post('/api/tasks',{milestoneID:this.props.id})\n            //             .then(response => {\n            //                 const tasks = response.data;\n            //                 this.setState({ tasks: tasks });\n                            \n            //             })\n            //             .catch(error => console.error(error)\n            //             ))\n        \n            //     }\n            // }\n\n            componentDidMount(){\n                console.log(this.props.id);\n              //  this.fetchMilestones();\n                \n            }\n           \n\n\n    render(){\n      \n        return(\n<>\n\n\n<table className=\"table table-striped tableLeft\">\n                                <thead className='thead-dark'>\n                                    <tr>\n                                       \n                                        <th colSpan=\"2\">Project Name</th>\n                                      \n                                    </tr>\n                                </thead>\n                                <tbody className=\"\">\n                                    {this.props.milestone.map((milestones) => {\n                                        return (\n                                            <tr key={milestones.id}>\n                                                <td>{milestones.name}</td>\n                                                <td ><Task id={milestones.id}/></td>\n                                              \n                                                </tr>\n                                              )})}\n                                                </tbody>\n                                              </table>\n</>\n\n\n\n        )\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}