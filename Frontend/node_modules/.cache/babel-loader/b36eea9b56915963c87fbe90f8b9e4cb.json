{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ali/project_managment/Frontend/src/components/NewTask.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Select from '@material-ui/core/Select';\nimport apiClient from '../services/api';\nexport default function NewTask() {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [taskName, setName] = React.useState();\n  const [percentage, setPercentage] = React.useState();\n  const [eid, setEid] = React.useState();\n  const [employees, setEmployees] = React.useState({\n    id: 1,\n    name: \"testtt\"\n  }); // React.useEffect(() => {\n  //     getEmployees();\n  //    console.log(employees,\"eee\");\n  // }, []);\n\n  const addTask = () => {\n    if (sessionStorage.getItem('loggedIn')) {\n      apiClient.get('sanctum/csrf-cookie').then(() => apiClient.post('/api/addTask', {\n        taskName: taskName,\n        percentage: percentage,\n        eid: eid\n      }).catch(error => console.error(error)));\n    }\n  };\n\n  const getEmployees = () => {\n    if (sessionStorage.getItem('loggedIn')) {\n      apiClient.get('sanctum/csrf-cookie').then(() => apiClient.get('/api/getEmployees').then(response => {\n        setEmployees(response.data.data);\n      }).catch(error => console.error(error)));\n    }\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n    getEmployees();\n    console.log(employees, \"eee\");\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setName(null);\n  };\n\n  const handleSubmit = () => {\n    setOpen(false);\n    addTask(); //props.onAddProj();\n  };\n\n  const options = () => {\n    employees.array.forEach(element => {});\n\n    employee => {\n      /*#__PURE__*/\n      _jsxDEV(\"option\", {\n        value: employee.id,\n        children: [employee.name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 22\n      }, this);\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClickOpen,\n      className: \"plus radius\",\n      style: {\n        marginRight: \"1em\",\n        float: \"right\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: \"New Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Start managing your project effectively\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          onChange: e => setEid(e.target.value),\n          children: [\" \", options]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: e => setName(e.target.value),\n          autoFocus: true,\n          margin: \"dense\",\n          id: \"name\",\n          label: \"Project Name\",\n          type: \"text\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: e => setPercentage(e.target.value),\n          autoFocus: true,\n          margin: \"dense\",\n          id: \"name\",\n          label: \"Project Name\",\n          type: \"number\",\n          max: 100,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          color: \"primary\",\n          children: \"Subscribe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 7\n  }, this);\n}\n\n_s(NewTask, \"YFjzeguFgMbeco9ZV2QFo7lxyMw=\");\n\n_c = NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"sources":["/home/ali/project_managment/Frontend/src/components/NewTask.js"],"names":["React","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Select","apiClient","NewTask","open","setOpen","useState","taskName","setName","percentage","setPercentage","eid","setEid","employees","setEmployees","id","name","addTask","sessionStorage","getItem","get","then","post","catch","error","console","getEmployees","response","data","handleClickOpen","log","handleClose","handleSubmit","options","array","forEach","element","employee","marginRight","float","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Select from '@material-ui/core/Select';\nimport apiClient from '../services/api';\n\nexport default function NewTask() {\n    const [open, setOpen] = React.useState(false);\n    const [taskName, setName] = React.useState();\n    const [percentage, setPercentage] = React.useState();\n    const [eid, setEid] = React.useState();\n    const [employees, setEmployees] = React.useState({id:1,name:\"testtt\"});\n\n    // React.useEffect(() => {\n    //     getEmployees();\n    //    console.log(employees,\"eee\");\n    // }, []);\n\n    const addTask = () => {\n        if (sessionStorage.getItem('loggedIn')) {\n            apiClient.get('sanctum/csrf-cookie')\n                .then(() => apiClient.post('/api/addTask',\n                    {\n                        taskName: taskName,\n                        percentage: percentage,\n                        eid:eid,\n                    })\n               \n                    .catch(error => console.error(error)\n                    ))\n\n        }\n    }\n\n    const getEmployees = () => {\n        if (sessionStorage.getItem('loggedIn')) {\n            apiClient.get('sanctum/csrf-cookie')\n                .then(() => apiClient.get('/api/getEmployees')\n                \n                .then(response => {\n                    setEmployees( response.data.data)\n                })\n               \n                    .catch(error => console.error(error)\n                    ))\n\n        }\n    }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n    getEmployees();\n    console.log(employees,\"eee\");\n   \n  };\n\n  const handleClose = () => {\n      setOpen(false);\n      setName(null);\n      \n  };\n  const handleSubmit = () => {\n      setOpen(false);\n      addTask();\n      //props.onAddProj();\n      \n  };\n  const options=()=>{employees.array.forEach(element => {\n      \n  });((employee)=> {(<option value={employee.id}>{employee.name} </option>);} );\n}\n  return (\n      <div>\n          {/* <button  onClick={handleClickOpen()} className=\"plus radius\" style={{marginRight:\"1em\",float:\"right\"}}></button> */}\n          <button  onClick={handleClickOpen} className=\"plus radius\" style={{marginRight:\"1em\",float:\"right\"}}>\n       \n      </button>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">New Project</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n                     Start managing your project effectively\n          </DialogContentText>\n          <Select onChange={(e)=>setEid(e.target.value)}> {options}</Select>\n          {/* <Select onChange={(e)=>setEid(e.target.value)}> {employees.forEach((employee)=>{return(<option value={employee.id}>{employee.name} </option>);})}</Select>   */}\n                  <TextField\n                      onChange={(e)=>setName(e.target.value)}\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Project Name\"\n            type=\"text\"\n            fullWidth\n          />\n\n<TextField\n                      onChange={(e)=>setPercentage(e.target.value)}\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Project Name\"\n            type=\"number\"\n            max={100}\n            fullWidth\n          />\n          \n                \n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleSubmit} color=\"primary\">\n            Subscribe\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}