{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/var/www/prjct_managment/Frontend/src/components/addEmployeeForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\n\nconst EmpRegister = props => {\n  _s();\n\n  const [redirect, setRedirect] = React.useState(true);\n  const [name, setName] = React.useState('');\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [password_confirmation, setConfirmPassword] = React.useState('');\n  const [managerId, setManagerId] = React.useState(sessionStorage.getItem('userId')); // const [authError, setAuthError] = React.useState(false);\n  // const [unknownError, setUnknownError] = React.useState(false);\n\n  const handleSubmit = e => {\n    e.preventDefault(); // if (sessionStorage.getItem('role') === 'admin') {\n    // setAuthError(false);\n    // setUnknownError(false);\n\n    axios.get('/sanctum/csrf-cookie').then(response => {\n      axios.post('/regEmp', {\n        name: name,\n        email: email,\n        password: password,\n        password_confirmation: password_confirmation,\n        role: 'employee',\n        manager_id: managerId\n      }).then(response => {\n        if (response.status === 201) {\n          setName(\"\");\n          setPassword(\"\");\n          setEmail(\"\");\n          setConfirmPassword(\"\");\n        }\n      }).catch(error => console.error(error));\n    }); // } else {\n    //     setRedirect(false);\n    // }\n  }; // if (toHome === true) {\n  //     return <Redirect to='/projects' />\n  // }\n\n\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            className: \"form-control\" //+ (authError || unknownError ? ' is-invalid' : '')\n            ,\n            placeholder: \"Name\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            className: \"form-control\" //+ (authError || unknownError ? ' is-invalid' : '')\n            ,\n            placeholder: \"Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            className: \"form-control\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password_confirmation\",\n            className: \"form-control\",\n            placeholder: \"Password\",\n            value: password_confirmation,\n            onChange: e => setConfirmPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"YOU ARE NOT ALLOWED TO ENTER HERE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 18\n    }, this);\n  }\n};\n\n_s(EmpRegister, \"qqaQSBfA8kLQAYJCE84YtVIfpNo=\");\n\n_c = EmpRegister;\nexport default EmpRegister;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmpRegister\");","map":{"version":3,"sources":["/var/www/prjct_managment/Frontend/src/components/addEmployeeForm.js"],"names":["React","Redirect","axios","EmpRegister","props","redirect","setRedirect","useState","name","setName","email","setEmail","password","setPassword","password_confirmation","setConfirmPassword","managerId","setManagerId","sessionStorage","getItem","handleSubmit","e","preventDefault","get","then","response","post","role","manager_id","status","catch","error","console","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\n\nconst EmpRegister = (props) => {\n    const [redirect, setRedirect] = React.useState(true);\n    const [name, setName] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const [password_confirmation, setConfirmPassword] = React.useState('');\n    const [managerId, setManagerId] = React.useState(sessionStorage.getItem('userId'));\n    // const [authError, setAuthError] = React.useState(false);\n    // const [unknownError, setUnknownError] = React.useState(false);\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // if (sessionStorage.getItem('role') === 'admin') {\n            \n            // setAuthError(false);\n            // setUnknownError(false);\n            axios.get('/sanctum/csrf-cookie')\n                .then(response => {\n                    axios.post('/regEmp', {\n                        name: name,\n                        email: email,\n                        password: password,\n                        password_confirmation: password_confirmation,\n                        role: 'employee',\n                        manager_id: managerId\n                    }).then(response => {\n                        if (response.status === 201) {\n                            setName(\"\");\n                            setPassword(\"\");\n                            setEmail(\"\");\n                            setConfirmPassword(\"\");\n                        }\n                    }).catch(error => console.error(error));\n                });\n\n       \n        // } else {\n        //     setRedirect(false);\n        // }\n    }\n    // if (toHome === true) {\n    //     return <Redirect to='/projects' />\n    // }\n\n    if (redirect) {\n        return (\n        \n            <div>\n                <h3>Register</h3>\n                <form onSubmit={handleSubmit}>\n                    <div className=\"form-group\">\n                        <input\n                        \n                            type=\"text\"\n                            name=\"name\"\n                            className={\"form-control\" } //+ (authError || unknownError ? ' is-invalid' : '')\n                            placeholder=\"Name\"\n                            value={name}\n                            onChange={e => setName(e.target.value)}\n                            required\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <input\n                        \n                            type=\"email\"\n                            name=\"email\"\n                            className={\"form-control\" } //+ (authError || unknownError ? ' is-invalid' : '')\n                            placeholder=\"Email\"\n                            value={email}\n                            onChange={e => setEmail(e.target.value)}\n                            required\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <input\n                            type=\"password\"\n                            name=\"password\"\n                            className={\"form-control\" }\n                            placeholder=\"Password\"\n                            value={password}\n                            onChange={e => setPassword(e.target.value)}\n                            required\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <input\n                            type=\"password\"\n                            name=\"password_confirmation\"\n                            className={\"form-control\"}\n                            placeholder=\"Password\"\n                            value={password_confirmation}\n                            onChange={e => setConfirmPassword(e.target.value)}\n                            required\n                        />\n                    </div>\n\n                \n                   \n                    <button type=\"submit\" className=\"btn btn-primary\">Register</button>\n                </form>\n            </div>\n        );\n    }else{return <div>YOU ARE NOT ALLOWED TO ENTER HERE</div>}\n};\n\nexport default EmpRegister;"]},"metadata":{},"sourceType":"module"}